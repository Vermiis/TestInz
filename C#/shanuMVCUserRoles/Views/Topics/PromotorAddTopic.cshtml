@model zarzadzanieTematami.Models.Topics

@{
    ViewBag.Title = "Utwórz nowy temat";
}

<h2>Utwórz nowy temat</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Topics</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>
        @{var listItems = new List<SelectListItem>
{
new SelectListItem { Text = "Inżynierska", Value="Inżynierska" },
new SelectListItem { Text = "Magisterska", Value="Magisterska" },
new SelectListItem { Text = "Inż/Mgr", Value="Inż/Mgr" }
};
        }
        <div class="form-group">
            @Html.LabelFor(model => model.TypeOf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TypeOf, new SelectList(listItems, "Value", "Text"), "Zakres");
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "MyTopicsFree")
</div>
